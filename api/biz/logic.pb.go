// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.proto

package biz // import "./"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushMidsReq struct {
	Op                   int32    `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Mids                 []int64  `protobuf:"varint,2,rep,packed,name=mids,proto3" json:"mids,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMidsReq) Reset()         { *m = PushMidsReq{} }
func (m *PushMidsReq) String() string { return proto.CompactTextString(m) }
func (*PushMidsReq) ProtoMessage()    {}
func (*PushMidsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_780bd5406bb3ee0d, []int{0}
}
func (m *PushMidsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMidsReq.Unmarshal(m, b)
}
func (m *PushMidsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMidsReq.Marshal(b, m, deterministic)
}
func (dst *PushMidsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMidsReq.Merge(dst, src)
}
func (m *PushMidsReq) XXX_Size() int {
	return xxx_messageInfo_PushMidsReq.Size(m)
}
func (m *PushMidsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMidsReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushMidsReq proto.InternalMessageInfo

func (m *PushMidsReq) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *PushMidsReq) GetMids() []int64 {
	if m != nil {
		return m.Mids
	}
	return nil
}

func (m *PushMidsReq) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type PushMidsRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMidsRes) Reset()         { *m = PushMidsRes{} }
func (m *PushMidsRes) String() string { return proto.CompactTextString(m) }
func (*PushMidsRes) ProtoMessage()    {}
func (*PushMidsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_780bd5406bb3ee0d, []int{1}
}
func (m *PushMidsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMidsRes.Unmarshal(m, b)
}
func (m *PushMidsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMidsRes.Marshal(b, m, deterministic)
}
func (dst *PushMidsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMidsRes.Merge(dst, src)
}
func (m *PushMidsRes) XXX_Size() int {
	return xxx_messageInfo_PushMidsRes.Size(m)
}
func (m *PushMidsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMidsRes.DiscardUnknown(m)
}

var xxx_messageInfo_PushMidsRes proto.InternalMessageInfo

func (m *PushMidsRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PushMidsRes) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*PushMidsReq)(nil), "PushMidsReq")
	proto.RegisterType((*PushMidsRes)(nil), "PushMidsRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BizClient is the client API for Biz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BizClient interface {
	PushMids(ctx context.Context, in *PushMidsReq, opts ...grpc.CallOption) (*PushMidsRes, error)
}

type bizClient struct {
	cc *grpc.ClientConn
}

func NewBizClient(cc *grpc.ClientConn) BizClient {
	return &bizClient{cc}
}

func (c *bizClient) PushMids(ctx context.Context, in *PushMidsReq, opts ...grpc.CallOption) (*PushMidsRes, error) {
	out := new(PushMidsRes)
	err := c.cc.Invoke(ctx, "/Biz/pushMids", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BizServer is the server API for Biz service.
type BizServer interface {
	PushMids(context.Context, *PushMidsReq) (*PushMidsRes, error)
}

func RegisterBizServer(s *grpc.Server, srv BizServer) {
	s.RegisterService(&_Biz_serviceDesc, srv)
}

func _Biz_PushMids_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMidsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BizServer).PushMids(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Biz/PushMids",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BizServer).PushMids(ctx, req.(*PushMidsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Biz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Biz",
	HandlerType: (*BizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "pushMids",
			Handler:    _Biz_PushMids_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}

func init() { proto.RegisterFile("logic.proto", fileDescriptor_logic_780bd5406bb3ee0d) }

var fileDescriptor_logic_780bd5406bb3ee0d = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0xcf,
	0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe6, 0xe2, 0x0e, 0x28, 0x2d, 0xce, 0xf0,
	0xcd, 0x4c, 0x29, 0x0e, 0x4a, 0x2d, 0x14, 0xe2, 0xe3, 0x62, 0xca, 0x2f, 0x90, 0x60, 0x54, 0x60,
	0xd4, 0x60, 0x0d, 0x62, 0xca, 0x2f, 0x10, 0x12, 0xe2, 0x62, 0xc9, 0xcd, 0x4c, 0x29, 0x96, 0x60,
	0x52, 0x60, 0xd6, 0x60, 0x0e, 0x02, 0xb3, 0x85, 0x04, 0xb8, 0x98, 0x73, 0x8b, 0xd3, 0x25, 0x98,
	0x15, 0x18, 0x35, 0x78, 0x82, 0x40, 0x4c, 0x25, 0x53, 0x64, 0x43, 0x8a, 0x41, 0x9a, 0x92, 0xf3,
	0x53, 0x52, 0xa1, 0xc6, 0x80, 0xd9, 0x20, 0xb1, 0x94, 0xc4, 0x92, 0x44, 0x09, 0x26, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x30, 0xdb, 0x48, 0x9f, 0x8b, 0xd9, 0x29, 0xb3, 0x4a, 0x48, 0x83, 0x8b, 0xa3,
	0x00, 0xaa, 0x5b, 0x88, 0x47, 0x0f, 0xc9, 0x35, 0x52, 0xc8, 0xbc, 0x62, 0x25, 0x06, 0x27, 0x8e,
	0x28, 0x36, 0x3d, 0x7d, 0xeb, 0xa4, 0xcc, 0xaa, 0x24, 0x36, 0xb0, 0xeb, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x9a, 0x61, 0x34, 0x01, 0xcc, 0x00, 0x00, 0x00,
}
